Próximos passos:
- Criar o sistema de criar nova rede
- Criar o sistema de participar de uma rede
- Terminar a action "send-to-gateway"


- Criar uma biblioteca em python para auxiliar os testes

- Salvar os dados da rede no key value 
- Salvar os dados do gateway no key value


Alguns possíveis problemas:
- retirar o registro de dentro do cluster_client.ex 
- O client não esta sendo informado sobre o tamanho da mensagem (Talvez gere alguns problemas no futuro)


Funcionamento do discovery:
- Depois de conectado com os hosts iniciais o gateway deve pegar a lista de hosts conectados e iniciar o discovery
para cada um deles (faz request de todos os hosts conectados), para cada host obtido nesse processo repetir
o discovery(aplicar então o filtro de hosts ja contactados, assim todos os hosts seriam atingidos mas apenas uma vez)





-- Actions -- 

register-client:
# gerar um id para o client
# checar se o processo ta vivo
# salvar no key value
# retornar status


send-to-client:
# validar o client remetente
# buscar o client destinatário no registro
# validar o client destinatário
# enviar a mensagem ao destinatário



try do
  File.stream!("./.env")
    |> Stream.map(&String.trim_trailing/1) # remove excess whitespace
    |> Enum.each(fn line -> line           # loop through each line
      |> String.replace("export ", "")     # remove "export" from line
      |> String.split("=")                 # split on the "=" (equals sign)
      |> Enum.reduce(fn(value, key) ->     # stackoverflow.com/q/33055834/1148249
        System.put_env(key, value)         # set each environment variable
      end)
    end)
rescue
  _ -> IO.puts "no .env file found!"
end